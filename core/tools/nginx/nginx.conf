user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 768;
    # multi_accept on;
}

http {
    client_max_body_size 2G;
    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    # Add 10min timeout if we get stuck while processing something like docker images and firmware upload
    proxy_read_timeout 600s;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # Logging Settings
    ##

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Redirect legacy companion port (Companion 0.0.X) to our new homepage
    server{
        listen 2770; # IPv4
        listen [::]:2770; # IPv6

        location / {
            rewrite ^/(.*)$ http://$host redirect;
        }
    }

    server {
        listen 80; # IPv4
        listen [::]:80; # IPv6

        add_header Access-Control-Allow-Origin *;

        # Endpoint used for backend status checks.
        # It will always return an empty 204 response when online.
        location = /status {
            return 204;
        }

        location /ardupilot-manager/ {
            include cors.conf;
            proxy_pass http://127.0.0.1:8000/;
        }

        location /bag/ {
            include cors.conf;
            proxy_pass http://127.0.0.1:9101/;
        }

        location /beacon/ {
            include cors.conf;
            proxy_pass http://127.0.0.1:9111/;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Interface-Ip $server_addr;
        }

        location /bridget/ {
            include cors.conf;
            proxy_pass http://127.0.0.1:27353/;
        }

        location /cable-guy/ {
            include cors.conf;
            proxy_pass http://127.0.0.1:9090/;
        }

        location /commander/ {
            include cors.conf;
            proxy_pass http://127.0.0.1:9100/;
        }

        location /docker/ {
            limit_except GET {
                deny all;
            }
            proxy_pass http://unix:/var/run/docker.sock:/;
        }

        location /file-browser/ {
            proxy_pass http://127.0.0.1:7777/;
        }

        location /helper/ {
            include cors.conf;
            proxy_pass http://127.0.0.1:81/;
        }

        location /kraken/ {
            include cors.conf;
            proxy_pass http://127.0.0.1:9134/;
        }

        location /nmea-injector/ {
            include cors.conf;
            proxy_pass http://127.0.0.1:2748/;
        }

        location ^~ /logviewer/ {
            # ^~ makes this a higher priority than locations with regex
            expires 10d;
            root /var/www/html;
        }

        location /mavlink2rest/ {
            # Hide the header from the upstream application
            proxy_hide_header Access-Control-Allow-Origin;

            include cors.conf;
            proxy_pass http://127.0.0.1:6040/;
            # next two lines are required for websockets
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }

        location /webrtc/ws/ {
            # Hide the header from the upstream application
            proxy_hide_header Access-Control-Allow-Origin;

            include cors.conf;
            proxy_pass http://127.0.0.1:6021/;
            proxy_http_version 1.1;
            # next two lines are required for websockets
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }

        location /mavlink-camera-manager/ {
            include cors.conf;
            proxy_pass http://127.0.0.1:6020/;
        }

        location /network-test/ {
            include cors.conf;
            proxy_pass http://127.0.0.1:9120/;
            # next two lines are required for websockets
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }

        location /system-information/ {
            include cors.conf;
            proxy_pass http://127.0.0.1:6030/;
            # next two lines are required for websockets
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }

        location /terminal/ {
            proxy_pass http://127.0.0.1:8088/;
            # next two lines are required for websockets
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }

        location /version-chooser/ {
            include cors.conf;
            proxy_pass http://127.0.0.1:8081/;
            proxy_buffering off;
            expires -1;
            add_header Cache-Control no-store;
        }

        location /wifi-manager/ {
            include cors.conf;
            proxy_pass http://127.0.0.1:9000/;
        }

        location /ping/ {
            include cors.conf;
            proxy_pass http://127.0.0.1:9110/;
        }

        location / {
            root /home/pi/frontend;
            try_files $uri $uri/ /index.html;
            autoindex on;
            # allow frontend to see files using json
            autoindex_format json;

            # prevent caching of index.html
            if ($uri = /index.html) {
                add_header Last-Modified "";
                add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
            }
        }

        location /assets/ {
            root /home/pi/frontend;
            try_files $uri $uri/;
            autoindex on;
            add_header Cache-Control "public, max-age=604800";
        }

        location /upload/ {
            client_max_body_size 100M;
            alias /usr/blueos/;

            # Change the access permissions of the uploaded file
            dav_access group:rw all:r;
            create_full_put_path on;

            # Configure the allowed HTTP methods
            dav_methods PUT DELETE MKCOL COPY MOVE;
        }

        location /userdata/ {
            root /usr/blueos;
            autoindex on;
            # use json as it is easily consumed by the frontend
            # users already have access through the file browser
            autoindex_format json;
            # disable cache to improve developer experience
            # this should have very little impact for users
            expires -1;
            add_header Cache-Control no-store;
            add_header Access-Control-Allow-Origin *;
        }

        # Helper to redirect services to their port
        location ~ ^/redirect-port/(?<port>\d+) {
            return 301 $scheme://$host:$port;
        }
        include /home/pi/tools/nginx/extensions/*.conf;
    }
}
